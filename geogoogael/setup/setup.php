<?php
/**
 * Googael Analytics auto database setup script v0.4 by Gael Abadin.
 *-----------------------------------------------------------------------------
 *  Copyright (C) 2013 Gael Abadin
 * License: MIT Expat (http://github.com/elcodedocle/geogoogael for more info)
 *-----------------------------------------------------------------------------
 * 
 * To run this script, copy geogoogael folder from the github repo 
 * (github.com/elcodedocle/geogoogael/geogoogael) into an EMPTY public 
 * web server folder, so you can access and execute it from your browser, 
 * e.g. http://myserver/emptyfolder/geogoogael/setup/setup.php
 * MAKE SURE THIS SCRIPT HAS PERMISSION TO CREATE AND WRITE FILES IN
 * THAT EMPTY FOLDER.
 * 
 * When setup finishes the app can be accessed from the browser on the 
 * installed folder (http://myserver/emptyfolder for the example above) 
 * 
 * Before running this script please check:
 * 
 *   - You have gettext PHP module installed on your server.
 * 
 *   - You have PDO and MYSQL PDO PHP modules installed on your server.
 * 
 *   - You have properly set apache .htaccess modrewrite support
 *   (AllowOverride, LoadModule, etc.) in your apache httpd.conf
 *   (https support is not necessary but advised)
 * 
 *   - Apache httpd.conf LogFormat directive is set to default or 
 *   "%h *whatever* %t", meaning the first thing in a log entry must be 
 *   the host (IPv4), then comes any or no fields, then the timestamp, 
 *   with a format like [01/Jan/2001:12:34:56 +0100]
 * 
 *   - You are running PHP >= 5.3
 * 
 *   - You have enabled google maps api v3 and set a valid browser key on the 
 *   parameter below in this script. (check also your web server is an allowed 
 *   referer on your google api console). More info: http://goo.gl/tX9UIi
 * 
 *   - Your database connection and other parameters below are OK.
 * 
 *   - You downloaded and zip extracted the proper data file
 *   IP2LOCATION-LITE-DB11.CSV from ip2location.com in the same folder as
 *   this script
 * 
 *   - In case you activated http basic auth support, apache mod_auth module 
 *   must be enabled on httpd.conf and a password file must be generated (at 
 *   the location specified in this script) using htpasswd command. 
 * 
 * Basic authentication support can be disabled after setup by commenting the 
 * first 5 lines from .htaccess generated file on geogoogael folder
 *
 * After a successful setup, an .htaccess file will be put in the access folder 
 * denying all access to geogoogael/setup folder and its contents. Comment this 
 * entry to be able to execute setup script again if needed. 
 * 
 * As an extra safety measure, remove setup folder after a succesful setup. 
 * (if execution access to setup folder is gained it could be maliciously 
 * abused causing a DOS by server overload)
 *
 * access_log file location and other parameters can be edited after setup
 * by manually editing appparams.php class generated by this script.
 * 
 * PLEASE NOTICE it's FUNDAMENTAL to activate MySQL query cache in order to
 * reduce cached queries processing time. Without it, every execution will
 * take minutes instead of microseconds!!
 *
 * If setup is OK but you get an error accessing the log file when trying to
 * run the app, check directory permisions for the file and every directory
 * on its path (it should be 744 for the file, 755 for the directories).
 * If problems persist make sure safe mode and open_basedir PHP ini directives
 * are DISABLED.
 * 
 */

    /*************************************************************************/
    /************************ BEGIN CONFIG PARAMETERS ************************/
    /*************************************************************************/
    $google_maps_api_v3_browser_key = "";
    $apache_access_log_file_location = "test/access_log";
    $mask_ips = 'false'; //hides actual ip values from the client.
    /* 0 for processing all entries. Ignored entries (like ipv6) don't count */
    $limit_processed_entries = 0; //0 for unlimited, should be > $max_page_size
    $min_page_size = 1; //Integer > 0
    $max_page_size = 0; //0 for unlimited (beware of big log files...)
    $default_page_size = 100;//Integer > 0
    $max_execution_seconds = -1; //0 for unlimited,-1 for default server setting
    $max_memory_in_bytes = 0; //0 for default server setting
    $time_zone = "Europe/Madrid";
    $database_user = "root";
    $database_password = "";
    $database_name = "geogoogael";
    $database_table_name = "records";
    $database_server_host = "localhost";
    $database_server_port = "3306";
    $create_database = true;
    $create_table = true;
    $prepare_data_file_for_import = true;
    $csv_data_file_buffer_size = 524288; //increase for performance of setup.php
    $fill_table = true;
    $index_table = true;
    $enable_http_basic_auth = false;
    $http_basic_auth_passwd_file = '/usr/local/etc/httpd/users';
    /*************************************************************************/
    /************************* END CONFIG PARAMETERS *************************/
    /*************************************************************************/

    set_time_limit (0);
    $start = microtime(true);
    if (!isset($_GET['start'])): ?><!doctype html>
<html>
    <!-- <?= _("Googael Analytics setup script by Gael Abadin. License: MIT Expat"); ?> -->
    <head>
        <meta charset="UTF-8" />
        <title>
            <?= _("Googael Analytics setup script by Gael Abadin. License: MIT Expat"); ?>
        </title>
        <script type="text/javascript">
            function processingDots(){
                dots = document.getElementById('dots');
                if (dots.innerText.length < 3) {
                    dots.innerText+='.';
                } else {
                    dots.innerText='.';
                }
            }
            function callSetup(){
                if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                    xmlhttp = new XMLHttpRequest();
                } else {// code for IE6, IE5
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                }

                var intervalID = window.setInterval(processingDots,1000);
                xmlhttp.onreadystatechange = function() {
                    if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                        if (xmlhttp.responseText) {
                            window.clearInterval(intervalID);
                            document.getElementById("text").innerHTML = xmlhttp.responseText;
                        }
                    }
                };

                xmlhttp.open("GET", "setup.php?start=true", true);
                xmlhttp.setRequestHeader("Content-type",
                        "application/x-www-form-urlencoded");
                xmlhttp.send();
            }
        </script>
        <body onload="callSetup();" >
            <div id="text">
                <p>
                    <?= _("Googael Analytics auto database setup script by Gael Abadin.");?>
                    <br />
                    <?= _("It may take a few minutes to process all data. Please be patient."); ?>
                    <br />
                    <?= _("Processing"); ?><span id="dots"></span>
                </p>
            </div>
        </body>
    </head>

<?php exit; endif;
    try {
        $dbh = new PDO(
            "mysql:host=".$database_server_host.
            ";port=".$database_server_port.
            ";charset=utf8",
            $database_user,
            $database_password,
            array(
                PDO::ATTR_PERSISTENT => true,
                PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES 'utf8'"
            )
        );
        $dbh->setAttribute(PDO::ATTR_EMULATE_PREPARES,false);
        $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    } catch (PDOException $e) {
        die(_("Error: Database server connection failure."));
    }

    if ($create_database){
        $stmt = $dbh -> prepare("DROP DATABASE IF EXISTS `$database_name`");
        if (!$stmt -> execute()) {
            die(_("DROP DATABASE error."));
        }
        $sql = file_get_contents('1_create_database.sql')
            or die (_("Error: Unable to open file 1_create_database.sql"));
        $sql = preg_replace (
            "/geogoogael/",
            $database_name,
            $sql
        );
        $stmt = $dbh -> prepare($sql);
        if (!$stmt -> execute()) {
            die(_("CREATE DATABASE error."));
        }
    }
    if ($create_table){
        $dbh -> exec('USE '.$database_name);
        $sql = file_get_contents('2_create_table.sql')
            or die (_("Error: Unable to open file 2_create_table.sql"));
        $sql = preg_replace (
            "/geogoogael/",
            $database_name,
            $sql
        );
        $sql = preg_replace (
            "/ip2location_records/",
            $database_table_name,
            $sql
        );
        $stmt = $dbh -> prepare($sql);
        if (!$stmt -> execute()) {
            die(_("CREATE TABLE error."));
        }
    }

    if ($prepare_data_file_for_import){
        file_exists('3_prepare_data_file_for_import.php')
            or 
        die(_("Error: Unable to open file 3_prepare_data_file_for_import.php"));
        require_once '3_prepare_data_file_for_import.php';
        prepare_data_file_for_import($csv_data_file_buffer_size);
    }
    if ($fill_table){
        $sql = file_get_contents('4_load_data_file_into_table.sql')
            or 
        die (_("Error: Unable to open file 4_load_data_file_into_table.sql"));
        $sql = preg_replace (
            "/geogoogael/",
            $database_name,
            $sql
        );
        $sql = preg_replace (
            "/ip2location_records/",
            $database_table_name,
            $sql
        );
        $sql = preg_replace (
            "/database\\.csv/",
            realpath(dirname(__FILE__))."/database.csv",
            $sql
        );
        try{
            $dbh -> exec($sql);
        } catch (PDOException $e) {
            print_r($dbh->errorInfo());
            die(_("LOAD DATA INFILE error: "));
        }
    }
    if ($index_table){
        $sql = file_get_contents('5_index_table.sql')
            or die (_("Error: Unable to open 5_index_table.sql"));
        $sql = preg_replace (
            "/geogoogael/",
            $database_name,
            $sql
        );
        $sql = preg_replace (
            "/ip2location_records/",
            $database_table_name,
            $sql
        );
        $stmt = $dbh -> prepare($sql);
        if (!$stmt -> execute()) {
            die(_("ALTER TABLE ADD INDEX error."));
        }
    }
    $fh = fopen("../appparams.php","w");
    fwrite($fh, "<?php
namespace geogoogael;
class appparams{
    //Here goes your Maps API browser key. More info: http://goo.gl/tX9UIi
    const googleMapsApiKey = \"".$google_maps_api_v3_browser_key."\";
    //Don't forget to set up proper read permissions for the log file!
    const logLocation = \"".$apache_access_log_file_location."\";
    //Hides actual IP values from the client.
    const maskIPs = ".$mask_ips.";
    //0 for processing all entries.
    const maxProcessedEntries = ".$limit_processed_entries.";
    //integer > 0.
    const minPageSize = ".$min_page_size.";
    //0 for unlimited.
    const maxPageSize = ".$max_page_size.";
    //integer > 0.
    const defaultPageSize = ".$default_page_size.";
    //Value in seconds. 0 for unlimited, -1 for default server setting.
    const execTimeout = ".$max_execution_seconds."; 
    //Value in bytes. 0 for default server setting.
    const memLimit = ".$max_memory_in_bytes."; 
    const timeZone = \"".$time_zone."\"; 
    const dBUser = \"".$database_user."\";
    const dBPassword = \"".$database_password."\";
    const dBName = \"".$database_name."\";
    const dBTableName = \"".$database_table_name."\";
    const dBHost = \"".$database_server_host."\";
    const dBPort = \"".$database_server_port."\";
}
?>");
    fclose ($fh);
    $fh = fopen('../../.htaccess','w');
    if ($enable_http_basic_auth) {
        fwrite($fh, "Deny from all
AuthUserFile $http_basic_auth_passwd_file
AuthName authorization
AuthType Basic
Satisfy Any
Require valid-user
");
    }
    fwrite ($fh,'RewriteEngine On
RewriteRule ^((?!geogoogael/).*)$ geogoogael/$1 [PT,NC]
RewriteRule ^geogoogael/(\d+)/(\d+)/(\d+)/$ geogoogael/main.php?f=accessLogMap&pageSize=$1&sessionTimeout=$2&page=$3 [PT,NC,L]
RewriteRule ^geogoogael/\d+/\d+/\d+/main\.php.*$ geogoogael/main.php?%{QUERY_STRING}&f=accessLogMap [PT,NC,L]
RewriteRule ^geogoogael/\d+/\d+/\d+/(.+)$ geogoogael/$1 [PT,NC,L]
RewriteRule ^geogoogael(/?)$ geogoogael/main.php?f=accessLogMap [PT,NC,L]
RewriteRule ^geogoogael/accessLogMap(/.*)?$ geogoogael/main.php?%{QUERY_STRING}&f=accessLogMap  [PT,NC,L]
RewriteRule ^geogoogael/setup(/.*)?$ - [R=404,NC,L]
');
    fclose ($fh);
    echo _("Googael Analytics database setup finished OK.").'<br/>'
    ._(" Peak memory reserved: ")
    .memory_get_peak_usage()
    ._(" bytes. Script exec. time: ")
    .(microtime(true)-$start)
    ._(" seconds (aprox.)".'<br/>'
    .'<a href="../../"/>'._('go to main page').'</a>');
?>