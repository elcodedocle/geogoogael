-------------------------------------------------------------------------------
 Googael Analytics v0.4: IP based geolocation for Apache access_log
 Copyright (C) 2013 Gael Abadin
 License: MIT Expat (http://github.com/elcodedocle/geogoogael for more info)
-------------------------------------------------------------------------------
â€Ž
What is this:

A marvelous piece of software you can roll on your apache web server in order 
to get some geographical info about your site's visitors on a super cool map 
and a super cool table.

Change Log:

UPDATE v0.2: Now also featuring a super cool zoomable timeline chart with 
granularity modulation (visits per minute, hour, day or month)! WHOA!!!

UPDATE v0.3: Optimized database queries, error messages, fake access_log file 
generator for testing purposes and show off. 

(Because I wanted to see how it'd perfom on huge access_log files, but didn't 
have any, I ended up overkilling the issue by designing the nastiest, most 
awesome access_log generator the world will ever ignore, using discrete event 
statistical modeling theory, forked processes and shared memory with signaling 
and semaphores and all kinds of freaky stuff. Check its code for more info :-))

UPDATE v0.4: Client-side input validation, REST-alike clean URLs, masked ips 
option, optimized access log parsing, HTTPBasicAuth support, and a lot of 
refactoring.

Known Bugs:

I have not the time or the patience to test this code thorougly so, as Doctor 
Knuth would say, "I have only proven it correct". Since my skills are nowhere 
near Doctor Knuth's, beware of the many bugs and help me clean the code by 
reporting them on https://github.com/elcodedocle/geogoogael/issues 
(I'll fix anything reported ASAP.) 


What this is not:

A serious web traffic analytics or maps rendering tool.

If you know all about KPIs, mapnik, geoJSON, PostGIS geometries, etc. you are 
probably wasting your time here: This is just an amusment, not precisely a 
proper web analytics tool with an embedded GIS, but if you find it useful and 
miss any features I'm open to suggestions.

So, that's it. Check it all out working at:

http://tester:retset@geovolutions.com/geogoogael/test

How to install/config/deploy:

-Read coments at the beginning of setup.php file.

How to use:

-After deployment, hit deployment location.

TODO: Filters on the map markers and chart data points. (It should be very 
easy to add and remove them dynamically by linking a simple filtering function
to the table search filter. Unfortunately I have higher priorities I need to 
catch up with right now :-( so maybe next time.) Also, gettext translations, 
processing other access_log formats and some .htaccess tweaks are all on my 
list, plus many other features that come to my mind faster than I can implement
or even write down (I've started working on a websockets based real time option
and a snippety thingy which I may turn into a wordpress/drupal plugin and an 
Android client, but let's leave things here for the time being...)
 
Acknowledgments: Everybody behind this thick fraking stack that makes the 
awesome possible.

Want to contribute?

Fork me on github!! (github.com/elcodedocle/geogoogael) 
Buy me a beer!! ( Paypal:  http://goo.gl/zCDmg5 
                  Bitcoin: 15QjBzCVckAwtLK5v95M8GS2tbpnTwKm5B )

FAQ:

Q: I can't access the app on the specified location when setup finishes.
A: You probably have a conflict with an existing .htaccess on your server.
   Add the this two lines at the top of all your previously existent 
   .htaccess files on the path to the one generated by setup.php, 
   right after `RewriteEngine on' line:
   RewriteCond %{REQUEST_URI} ^/uri/path/to/geogoogael/parent/folder(/.*)?$
   RewriteRule (.*) $1 [L]
   (of course you need to replace the path with the real path to the app's
   deployment folder from the webroot)

Q: Does it work on windows?
A: No. You should be able to patch it and have it working in about 5 minutes, 
though. This is because I don't like or care about WAMP very much. (Sorry)

Q: It is working, but why so darn slow?
A: Maybe you are not caching database queries? Try enabling cache on you my.cnf
   mysql/mariadb server config file and setting cache size to at least 16MB. On
   big log files some requests can still take more than a minute at first, 
   probably due to the log file not being cached on the RAM yet.

Q: Why did you go all this way instead of just using google analytics?
A: There may be a better explanation in the foreseeable future, but mainly 
   because I could do it and felt like doing it.

Q: To be clear... Is there any advantage on using this over google analytics?
A: None that I can think of... Nope. None at all.

Q: Can I use this code commercialy?
A: Yes, you can. 

Specifically, this code and the libraries it uses (which you will find on lib 
folder) have GPLv2 compatible licenses that allow commercial use free of 
charge, with two notable exceptions: Google maps API and highcharts plugin, 
both with available licensing options for commercial use which are not free 
of charge (check out their websites for pricing: http://goo.gl/XC8UjG and 
http://goo.gl/dq0bwj). About the geolocation database, it is available for 
free for commercial use, as long as the terms stated here are met: 
http://lite.ip2location.com/terms-of-use

This product includes IP2Location LITE data available from <a href=
"http://www.ip2location.com">http://www.ip2location.com</a>.

There you go. Have fun.